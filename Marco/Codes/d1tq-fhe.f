      program check
      implicit none
      integer j1,N1
      double precision eta1, xi1, d1tq1
      eta1 = 1.d-4
      xi1 = 1.d0
      N1 = 51
      do j1 = 1,N1
        eta1 = 10.d0**(2.d0-6.d0/DBLE(N1-1)*DBLE(j1-1))
        CALL subd1tq(eta1,xi1,d1tq1)
        write(6,11) eta1,d1tq1*2.d0/3.d0
 11     format(6(1pe12.6,1x))
      enddo
      end
      



      
c equation (37) in PLB347 (1995) 143 - 151, the transverse piece
c MSbar scheme
      subroutine subd1tq(eta,xi,d1tq)
      implicit none
      integer neta, nxi
      parameter (neta = 45, nxi = 15)
      double precision calcpts(neta,nxi), aeta(neta), axi(nxi)
      double precision eta, xi, huge, small, d1tq
      double precision t, dt, u, y1, y2, y3, y4
      parameter (small = 1.d-8, huge = 1.d10)
      integer j, ieta, ixi
      data (calcpts(j, 1), j=1,neta) /0.d0, 0.5334D-08, 0.1610D-06,
     #  0.6845D-06, 0.1686D-05, 0.3217D-05, 0.4194D-05, 0.5280D-04,
     #  0.1503D-03, 0.2862D-03, 0.4515D-03, 0.5433D-03, 0.1646D-02,
     #  0.2849D-02, 0.3998D-02, 0.5037D-02, 0.5965D-02, 0.6785D-02,
     #  0.7506D-02, 0.8147D-02, 0.8710D-02, 0.1198D-01, 0.1328D-01,
     #  0.1385D-01, 0.1405D-01, 0.1407D-01, 0.1398D-01, 0.1382D-01,
     #  0.1363D-01, 0.1342D-01, 0.9742D-02, 0.7755D-02, 0.6535D-02,
     #  0.5706D-02, 0.5375D-02, 0.3540D-02, 0.2726D-02, 0.1928D-02,
     #  0.1525D-02, 0.1274D-02, 0.1182D-02, 0.3521D-03, 0.2048D-03,
     #  0.3080D-04, 0.d0/
c
      data (calcpts(j, 2), j=1,neta) /0.d0, 0.5151D-09, 0.2382D-07,
     #  0.1244D-06, 0.3522D-06, 0.7469D-06, 0.1016D-05, 0.1948D-04,
     #  0.6527D-04, 0.1365D-03, 0.2295D-03, 0.2832D-03, 0.9920D-03,
     #  0.1847D-02, 0.2712D-02, 0.3535D-02, 0.4293D-02, 0.4983D-02,
     #  0.5607D-02, 0.6170D-02, 0.6678D-02, 0.9807D-02, 0.1117D-01,
     #  0.1181D-01, 0.1210D-01, 0.1220D-01, 0.1217D-01, 0.1209D-01,
     #  0.1196D-01, 0.1180D-01, 0.8751D-02, 0.7014D-02, 0.5938D-02,
     #  0.5196D-02, 0.4898D-02, 0.3252D-02, 0.2513D-02, 0.1789D-02,
     #  0.1413D-02, 0.1185D-02, 0.1101D-02, 0.3308D-03, 0.1932D-03,
     #  0.2940D-04, 0.d0/
c
      data (calcpts(j, 3), j=1,neta) /0.d0, 0.3255D-10, 0.2586D-08,
     #  0.1577D-07, 0.4970D-07, 0.1149D-06, 0.1623D-06, 0.4809D-05,
     #  0.1983D-04, 0.4731D-04, 0.8738D-04, 0.1119D-03, 0.4921D-03,
     #  0.1028D-02, 0.1627D-02, 0.2237D-02, 0.2829D-02, 0.3392D-02,
     #  0.3917D-02, 0.4406D-02, 0.4857D-02, 0.7836D-02, 0.9243D-02,
     #  0.9956D-02, 0.1031D-01, 0.1047D-01, 0.1050D-01, 0.1047D-01,
     #  0.1039D-01, 0.1029D-01, 0.7796D-02, 0.6301D-02, 0.5361D-02,
     #  0.4703D-02, 0.4443D-02, 0.2970D-02, 0.2302D-02, 0.1646D-02,
     #  0.1309D-02, 0.1098D-02, 0.1018D-02, 0.3114D-03, 0.1806D-03,
     #  0.2744D-04, 0.d0/
c
      data (calcpts(j, 4), j=1,neta) /0.d0, 0.7256D-11, 0.3449D-09,
     #  0.2028D-08, 0.6447D-08, 0.1520D-07, 0.2173D-07, 0.8183D-06,
     #  0.4023D-05, 0.1093D-04, 0.2238D-04, 0.2994D-04, 0.1755D-03,
     #  0.4303D-03, 0.7578D-03, 0.1126D-02, 0.1512D-02, 0.1902D-02,
     #  0.2284D-02, 0.2655D-02, 0.3009D-02, 0.5614D-02, 0.7013D-02,
     #  0.7784D-02, 0.8217D-02, 0.8453D-02, 0.8571D-02, 0.8610D-02,
     #  0.8600D-02, 0.8556D-02, 0.6750D-02, 0.5523D-02, 0.4736D-02,
     #  0.4175D-02, 0.3953D-02, 0.2676D-02, 0.2087D-02, 0.1500D-02,
     #  0.1196D-02, 0.1007D-02, 0.9333D-03, 0.2876D-03, 0.1690D-03,
     #  0.2624D-04, 0.d0/
c
      data (calcpts(j, 5), j=1,neta) /0.d0, 0.9064D-12, 0.4197D-10,
     #  0.2484D-09, 0.7987D-09, 0.1908D-08, 0.2745D-08, 0.1169D-06,
     #  0.6378D-06, 0.1896D-05, 0.4197D-05, 0.5822D-05, 0.4473D-04,
     #  0.1310D-03, 0.2623D-03, 0.4305D-03, 0.6257D-03, 0.8389D-03,
     #  0.1064D-02, 0.1294D-02, 0.1525D-02, 0.3522D-02, 0.4800D-02,
     #  0.5585D-02, 0.6078D-02, 0.6383D-02, 0.6571D-02, 0.6681D-02,
     #  0.6738D-02, 0.6764D-02, 0.5665D-02, 0.4726D-02, 0.4088D-02,
     #  0.3632D-02, 0.3446D-02, 0.2369D-02, 0.1861D-02, 0.1347D-02,
     #  0.1081D-02, 0.9132D-03, 0.8485D-03, 0.2657D-03, 0.1563D-03,
     #  0.2511D-04, 0.d0/
c
      data (calcpts(j, 6), j=1,neta) /0.d0, 0.2657D-12, 0.1234D-10,
     #  0.7333D-10, 0.2366D-09, 0.5664D-09, 0.8165D-09, 0.3585D-07,
     #  0.2016D-06, 0.6159D-06, 0.1399D-05, 0.1963D-05, 0.1675D-04,
     #  0.5327D-04, 0.1141D-03, 0.1979D-03, 0.3015D-03, 0.4212D-03,
     #  0.5532D-03, 0.6942D-03, 0.8411D-03, 0.2292D-02, 0.3371D-02,
     #  0.4096D-02, 0.4583D-02, 0.4909D-02, 0.5129D-02, 0.5277D-02,
     #  0.5371D-02, 0.5431D-02, 0.4823D-02, 0.4098D-02, 0.3584D-02,
     #  0.3204D-02, 0.3046D-02, 0.2125D-02, 0.1683D-02, 0.1229D-02,
     #  0.9890D-03, 0.8394D-03, 0.7798D-03, 0.2471D-03, 0.1470D-03,
     #  0.2343D-04, 0.d0/
c
      data (calcpts(j, 7), j=1,neta) /0.d0, 0.2199D-12, 0.1022D-10,
     #  0.6069D-10, 0.1959D-09, 0.4690D-09, 0.6762D-09, 0.2974D-07,
     #  0.1674D-06, 0.5122D-06, 0.1165D-05, 0.1637D-05, 0.1405D-04,
     #  0.4497D-04, 0.9692D-04, 0.1690D-03, 0.2589D-03, 0.3633D-03,
     #  0.4793D-03, 0.6040D-03, 0.7347D-03, 0.2058D-02, 0.3074D-02,
     #  0.3776D-02, 0.4248D-02, 0.4574D-02, 0.4796D-02, 0.4949D-02,
     #  0.5048D-02, 0.5115D-02, 0.4613D-02, 0.3939D-02, 0.3453D-02,
     #  0.3095D-02, 0.2944D-02, 0.2064D-02, 0.1636D-02, 0.1198D-02,
     #  0.9665D-03, 0.8193D-03, 0.7636D-03, 0.2445D-03, 0.1445D-03,
     #  0.2312D-04, 0.d0/
c
      data (calcpts(j, 8), j=1,neta) /0.d0, 0.1569D-12, 0.7293D-11,
     #  0.4330D-10, 0.1397D-09, 0.3345D-09, 0.4823D-09, 0.2118D-07,
     #  0.1189D-06, 0.3635D-06, 0.8253D-06, 0.1158D-05, 0.9902D-05,
     #  0.3158D-04, 0.6792D-04, 0.1184D-03, 0.1815D-03, 0.2548D-03,
     #  0.3369D-03, 0.4252D-03, 0.5186D-03, 0.1495D-02, 0.2288D-02,
     #  0.2862D-02, 0.3269D-02, 0.3558D-02, 0.3766D-02, 0.3914D-02,
     #  0.4020D-02, 0.4095D-02, 0.3882D-02, 0.3377D-02, 0.2991D-02,
     #  0.2703D-02, 0.2580D-02, 0.1839D-02, 0.1469D-02, 0.1086D-02,
     #  0.8801D-03, 0.7482D-03, 0.6992D-03, 0.2261D-03, 0.1353D-03,
     #  0.2217D-04, 0.d0/
c
      data (calcpts(j, 9), j=1,neta) /0.d0, 0.1509D-12, 0.7016D-11,
     #  0.4166D-10, 0.1344D-09, 0.3218D-09, 0.4636D-09, 0.2035D-07,
     #  0.1142D-06, 0.3489D-06, 0.7914D-06, 0.1111D-05, 0.9461D-05,
     #  0.3008D-04, 0.6453D-04, 0.1122D-03, 0.1716D-03, 0.2406D-03,
     #  0.3174D-03, 0.4000D-03, 0.4874D-03, 0.1394D-02, 0.2127D-02,
     #  0.2660D-02, 0.3038D-02, 0.3311D-02, 0.3506D-02, 0.3646D-02,
     #  0.3748D-02, 0.3820D-02, 0.3657D-02, 0.3196D-02, 0.2844D-02,
     #  0.2571D-02, 0.2460D-02, 0.1764D-02, 0.1415D-02, 0.1049D-02,
     #  0.8515D-03, 0.7264D-03, 0.6773D-03, 0.2231D-03, 0.1328D-03,
     #  0.2174D-04, 0.d0/
c
      data (calcpts(j,10), j=1,neta) /0.d0, 0.1441D-12, 0.6693D-11,
     #  0.3978D-10, 0.1282D-09, 0.3069D-09, 0.4423D-09, 0.1938D-07,
     #  0.1087D-06, 0.3317D-06, 0.7515D-06, 0.1054D-05, 0.8930D-05,
     #  0.2825D-04, 0.6027D-04, 0.1043D-03, 0.1588D-03, 0.2217D-03,
     #  0.2913D-03, 0.3657D-03, 0.4437D-03, 0.1233D-02, 0.1845D-02,
     #  0.2274D-02, 0.2570D-02, 0.2775D-02, 0.2918D-02, 0.3018D-02,
     #  0.3085D-02, 0.3134D-02, 0.2930D-02, 0.2574D-02, 0.2306D-02,
     #  0.2102D-02, 0.2018D-02, 0.1478D-02, 0.1200D-02, 0.9031D-03,
     #  0.7391D-03, 0.6339D-03, 0.5926D-03, 0.1992D-03, 0.1202D-03,
     #  0.2022D-04, 0.d0/
c
      data (calcpts(j,11), j=1,neta) /0.d0, 0.1434D-12, 0.6663D-11,
     #  0.3955D-10, 0.1276D-09, 0.3054D-09, 0.4402D-09, 0.1929D-07,
     #  0.1082D-06, 0.3299D-06, 0.7475D-06, 0.1048D-05, 0.8874D-05,
     #  0.2804D-04, 0.5983D-04, 0.1035D-03, 0.1574D-03, 0.2197D-03,
     #  0.2885D-03, 0.3621D-03, 0.4391D-03, 0.1215D-02, 0.1814D-02,
     #  0.2226D-02, 0.2508D-02, 0.2697D-02, 0.2825D-02, 0.2909D-02,
     #  0.2961D-02, 0.2994D-02, 0.2604D-02, 0.2208D-02, 0.1946D-02,
     #  0.1758D-02, 0.1681D-02, 0.1229D-02, 0.1005D-02, 0.7642D-03,
     #  0.6311D-03, 0.5433D-03, 0.5108D-03, 0.1779D-03, 0.1087D-03,
     #  0.1860D-04, 0.d0/
c
      data (calcpts(j,12), j=1,neta) /0.d0, 0.1433D-12, 0.6657D-11,
     #  0.3953D-10, 0.1275D-09, 0.3053D-09, 0.4401D-09, 0.1929D-07,
     #  0.1081D-06, 0.3297D-06, 0.7470D-06, 0.1048D-05, 0.8868D-05,
     #  0.2804D-04, 0.5979D-04, 0.1034D-03, 0.1574D-03, 0.2196D-03,
     #  0.2883D-03, 0.3619D-03, 0.4391D-03, 0.1216D-02, 0.1818D-02,
     #  0.2238D-02, 0.2525D-02, 0.2720D-02, 0.2855D-02, 0.2943D-02,
     #  0.3000D-02, 0.3036D-02, 0.2630D-02, 0.2171D-02, 0.1860D-02,
     #  0.1643D-02, 0.1555D-02, 0.1076D-02, 0.8619D-03, 0.6490D-03,
     #  0.5361D-03, 0.4630D-03, 0.4353D-03, 0.1560D-03, 0.9623D-04,
     #  0.1727D-04, 0.d0/
c
      data (calcpts(j,13), j=1,neta) /0.d0, 0.1401D-12, 0.6668D-11,
     #  0.3954D-10, 0.1275D-09, 0.3053D-09, 0.4398D-09, 0.1928D-07,
     #  0.1081D-06, 0.3296D-06, 0.7470D-06, 0.1048D-05, 0.8868D-05,
     #  0.2804D-04, 0.5979D-04, 0.1034D-03, 0.1574D-03, 0.2196D-03,
     #  0.2883D-03, 0.3621D-03, 0.4389D-03, 0.1217D-02, 0.1821D-02,
     #  0.2244D-02, 0.2535D-02, 0.2736D-02, 0.2876D-02, 0.2970D-02,
     #  0.3035D-02, 0.3074D-02, 0.2727D-02, 0.2277D-02, 0.1956D-02,
     #  0.1722D-02, 0.1625D-02, 0.1073D-02, 0.8265D-03, 0.5928D-03,
     #  0.4775D-03, 0.4067D-03, 0.3804D-03, 0.1358D-03, 0.8456D-04,
     #  0.1560D-04, 0.d0/
c
      data (calcpts(j,14), j=1,neta) /0.d0, 0.4279D-12, 0.7533D-11,
     #  0.4041D-10, 0.1273D-09, 0.3024D-09, 0.4428D-09, 0.1926D-07,
     #  0.1081D-06, 0.3296D-06, 0.7469D-06, 0.1048D-05, 0.8865D-05,
     #  0.2804D-04, 0.5978D-04, 0.1034D-03, 0.1574D-03, 0.2196D-03,
     #  0.2885D-03, 0.3621D-03, 0.4392D-03, 0.1218D-02, 0.1824D-02,
     #  0.2249D-02, 0.2541D-02, 0.2744D-02, 0.2886D-02, 0.2982D-02,
     #  0.3050D-02, 0.3091D-02, 0.2793D-02, 0.2369D-02, 0.2064D-02,
     #  0.1838D-02, 0.1744D-02, 0.1188D-02, 0.9171D-03, 0.6428D-03,
     #  0.5015D-03, 0.4140D-03, 0.3816D-03, 0.1146D-03, 0.7074D-04,
     #  0.1332D-04, 0.d0/
c
      data (calcpts(j,15), j=1,neta) /0.d0, 0.0000D+00, 0.8481D-11,
     #  0.1250D-10, 0.1173D-09, 0.3631D-09, 0.4731D-09, 0.1937D-07,
     #  0.1080D-06, 0.3296D-06, 0.7471D-06, 0.1048D-05, 0.8865D-05,
     #  0.2802D-04, 0.5976D-04, 0.1034D-03, 0.1574D-03, 0.2196D-03,
     #  0.2885D-03, 0.3619D-03, 0.4391D-03, 0.1218D-02, 0.1824D-02,
     #  0.2249D-02, 0.2543D-02, 0.2745D-02, 0.2888D-02, 0.2985D-02,
     #  0.3051D-02, 0.3095D-02, 0.2802D-02, 0.2385D-02, 0.2084D-02,
     #  0.1860D-02, 0.1769D-02, 0.1219D-02, 0.9522D-03, 0.6765D-03,
     #  0.5313D-03, 0.4398D-03, 0.4059D-03, 0.1124D-03, 0.6680D-04,
     #  0.1251D-04, 0.d0/
c
      data (aeta(j), j = 1,neta) /small, 0.1000d-02, 0.3000d-02,
     #  0.5000d-02, 0.7000d-02, 0.9000d-02, 0.1000d-01, 0.3000d-01, 
     #  0.5000d-01, 0.7000d-01, 0.9000d-01, 0.1000d+00, 0.2000d+00, 
     #  0.3000d+00, 0.4000d+00, 0.5000d+00, 0.6000d+00, 0.7000d+00, 
     #  0.8000d+00, 0.9000d+00, 0.1000d+01, 0.2000d+01, 0.3000d+01,
     #  0.4000d+01, 0.5000d+01, 0.6000d+01, 0.7000d+01, 0.8000d+01, 
     #  0.9000d+01, 0.1000d+02, 0.3000d+02, 0.5000d+02, 0.7000d+02,
     #  0.9000d+02, 0.1000d+03, 0.2000d+03, 0.3000d+03, 0.5000d+03,
     #  0.7000d+03, 0.9000d+03, 0.1000d+04, 0.5000d+04, 0.1000d+05,
     #  0.1000d+06, huge/
c
      data (axi(j), j = 1,nxi) /0.1000d-01, 0.3162d-01, 0.1000d+00,
     #  0.3162d+00, 0.1000d+01, 0.2500d+01, 0.3162d+01, 0.7500d+01, 
     #  0.1000d+02, 0.3162d+02, 0.1000d+03, 0.3162d+03, 0.1000d+04,
     #  0.5000d+04, 0.1000d+05/
c
c  rewrite interpolation to ln(eta)
c      eta = log(eta)
c      do j = 1,neta
c        aeta(j) = log(aeta(j))
c      enddo
c  here we have to choose the array elements that will go into the 
c  interpolation.
      call locate(aeta, neta, eta, ieta)
      call locate(axi, nxi, xi, ixi)
      if (ieta .le. 1) ieta = 1
      if (ieta .gt. (neta - 1)) ieta = neta - 1
      if (ixi .le. 1) ixi = 1
      if (ixi .gt. (nxi - 1)) ixi = nxi - 1
      y1 = calcpts(ieta,ixi)
      y2 = calcpts(ieta+1,ixi)
      y3 = calcpts(ieta+1,ixi+1)
      y4 = calcpts(ieta,ixi+1)
c interpolating between the points
      dt = log(aeta(ieta + 1)) - log(aeta(ieta))
      t = (log(eta) - log(aeta(ieta)))/dt
      u = (xi - axi(ixi))/(axi(ixi + 1) - axi(ixi))
      d1tq = (1.d0 - t)*(1.d0 - u)*y1 + t*(1.d0 - u)*y2 +
     #         t*u*y3 + (1.d0 - t)*u*y4
      return
      end
c routine taken out of Numerical Recipes
      Subroutine Locate(xx,n,x,j)
      Integer j,n
      Double Precision x,xx(n)
      Integer jl,ju,jm
      jl = 0
      ju = n+1
 10   If (ju - jl .gt. 1) then
         jm = (ju + jl)/2
         If ((xx(n) .gt. xx(1)) .eqv. (x .gt. xx(jm))) then
            jl = jm
         else
            ju = jm
         endif
         goto 10
      endif
      j = jl
      return
      End

         
