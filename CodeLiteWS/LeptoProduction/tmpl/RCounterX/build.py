#!/usr/bin/python
# -*- coding: utf-8 -*-

from datetime import datetime

tmpl = """/// %s
#include "RCounterX.h"
#include "RCounterXY.h"
#include "../../Common/ME/BQED.h"
#include "../../Common/Color.hpp"

#define Power(a,b) pow(a,b)
#define Cos(x) cos(x)
#define Sin(x) sin(x)
#define Sqrt(x) sqrt(x)

#define init1 cdbl s = sp + q2;\\
cdbl beta = sqrt(1.-4.*m2/s);

cdbl FullyDiff::ME::EikonalFactorOKCounterX(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {{
init1
return {EikonalFactorOKCounterX};
}}

cdbl FullyDiff::ME::EikonalFactorQEDCounterX(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {{
init1
return {EikonalFactorQEDCounterX};
}}

#define build(proj) cdbl FullyDiff::ME::RCounterX_##proj(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {{\\
	init1;\\
	if (1. + y < 1e-7) {{\\
		cdbl t1sc = -sp/2.*(1. - sqrt(1.-4.*m2/(sp+q2))*cos(Theta1));\\
		return RCounterXY_##proj(m2,q2,sp,t1sc);\\
	}}\\
	cdbl t1 = -sp/2.*(1. - beta*cos(Theta1));\\
	cdbl f = Color::CA*FullyDiff::ME::EikonalFactorOKCounterX(m2,q2,sp,y,Theta1,Theta2) + 2.*Color::CF*FullyDiff::ME::EikonalFactorQEDCounterX(m2,q2,sp,y,Theta1,Theta2);\\
	return f * Common::ME::BQED_##proj(m2,q2,sp,t1);\\
}}

interateAllProj(build)

"""%("auto-generated by build.py on {0:%Y}/{0:%m}/{0:%d} {0:%H}:{0:%M}:{0:%S}".format(datetime.now()))

fs={}
for l in ["EikonalFactorOKCounterX","EikonalFactorQEDCounterX"]:
	with open(l+".c","r") as f:
		fs[l] = f.read()
		f.close()

with open("../../src/FullyDiff/ME/RCounterX.cpp", "w") as f:
	f.write(tmpl.format(**fs))
	f.close()
