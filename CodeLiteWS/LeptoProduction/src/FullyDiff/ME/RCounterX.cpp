/// auto-generated by build.py on 2018/07/05 11:43:41
#include "RCounterX.h"
#include "RCounterXY.h"
#include "../../Common/ME/BQED.h"
#include "../../Common/Color.hpp"

#define Power(a,b) pow(a,b)
#define Cos(x) cos(x)
#define Sin(x) sin(x)
#define Sqrt(x) sqrt(x)

#define init1 cdbl s = sp + q2;\
cdbl beta = sqrt(1.-4.*m2/s);
#define init2 cdbl t1 = -sp/2.*(1. - beta*cos(Theta1));\
cdbl f = Color::CA*FullyDiff::ME::EikonalFactorOKCounterX(m2,q2,sp,y,Theta1,Theta2) + 2.*Color::CF*FullyDiff::ME::EikonalFactorQEDCounterX(m2,q2,sp,y,Theta1,Theta2);
#define checkThr(proj) if (1. + y < 1e-7) {\
cdbl t1sc = -sp/2.*(1. - sqrt(1.-4.*m2/(sp+q2))*cos(Theta1));\
return RCounterXY_##proj(m2,q2,sp,t1sc);\
}

cdbl FullyDiff::ME::EikonalFactorOKCounterX(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
return (-2*Power(sp,2)*(-1 + y)*(s*y - 2*m2*(1 + y) + Power(beta,2)*s*Cos(Theta1)*(-(y*Cos(Theta1)) + Sqrt(1 - Power(y,2))*Cos(Theta2)*Sin(Theta1))))/(Power(s,2)*(-1 + beta*y*Cos(Theta1) - beta*Sqrt(1 - Power(y,2))*Cos(Theta2)*Sin(Theta1))*(1 + beta*y*Cos(Theta1) - beta*Sqrt(1 - Power(y,2))*Cos(Theta2)*Sin(Theta1)));
}

cdbl FullyDiff::ME::EikonalFactorQEDCounterX(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
return (-2*(4*m2 - s)*Power(sp,2)*(-1 + Power(y,2))*(-1 + Power(y,2)*Power(Cos(Theta1),2) - 2*y*Sqrt(1 - Power(y,2))*Cos(Theta1)*Cos(Theta2)*Sin(Theta1) - (-1 + Power(y,2))*Power(Cos(Theta2),2)*Power(Sin(Theta1),2)))/(Power(s,2)*Power(1 + beta*y*Cos(Theta1) - beta*Sqrt(1 - Power(y,2))*Cos(Theta2)*Sin(Theta1),2)*Power(1 - beta*y*Cos(Theta1) + beta*Sqrt(1 - Power(y,2))*Cos(Theta2)*Sin(Theta1),2));
}


cdbl FullyDiff::ME::RCounterX_F2_VV(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
init2
checkThr(F2_VV)
return f * Common::ME::BQED_F2_VV(m2,q2,sp,t1);
}

cdbl FullyDiff::ME::RCounterX_F2_AA(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
init2
checkThr(F2_AA)
return f * Common::ME::BQED_F2_AA(m2,q2,sp,t1);
}

cdbl FullyDiff::ME::RCounterX_FL_VV(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
init2
checkThr(FL_VV)
return f * Common::ME::BQED_FL_VV(m2,q2,sp,t1);
}

cdbl FullyDiff::ME::RCounterX_FL_AA(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
init2
checkThr(FL_AA)
return f * Common::ME::BQED_FL_AA(m2,q2,sp,t1);
}

cdbl FullyDiff::ME::RCounterX_x2g1_VV(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
init2
checkThr(x2g1_VV)
return f * Common::ME::BQED_x2g1_VV(m2,q2,sp,t1);
}

cdbl FullyDiff::ME::RCounterX_x2g1_AA(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
init2
checkThr(x2g1_AA)
return f * Common::ME::BQED_x2g1_AA(m2,q2,sp,t1);
}

cdbl FullyDiff::ME::RCounterX_xF3_VA(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
init2
checkThr(xF3_VA)
return f * Common::ME::BQED_xF3_VA(m2,q2,sp,t1);
}

cdbl FullyDiff::ME::RCounterX_g4_VA(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
init2
checkThr(g4_VA)
return f * Common::ME::BQED_g4_VA(m2,q2,sp,t1);
}

cdbl FullyDiff::ME::RCounterX_gL_VA(cdbl m2, cdbl q2, cdbl sp, cdbl y, cdbl Theta1, cdbl Theta2) {
init1
init2
checkThr(gL_VA)
return f * Common::ME::BQED_gL_VA(m2,q2,sp,t1);
}
